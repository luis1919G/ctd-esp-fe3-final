{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luish\\\\OneDrive\\\\Escritorio\\\\Entregable\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"light\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(initialState);\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [theme, setTheme] = useState(initialState.theme);\n  const [data, setData] = useState(initialState.data);\n  const anotherData = useMemo(() => {\n    const getDentists = async () => {\n      const dataFetched = await fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n        return response.json();\n      });\n      return dataFetched;\n    };\n\n    localStorage.setItem('favoritesDentists', JSON.stringify(data));\n    return {\n      getDentists,\n      theme,\n      data,\n      setTheme,\n      setData\n    };\n  }, [theme, data]);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: anotherData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"b6TqvuFRon3JAGaoxig2YAYa4j8=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useMemo","useState","initialState","theme","data","ContextGlobal","ContextProvider","children","setTheme","setData","anotherData","getDentists","dataFetched","fetch","then","response","json","localStorage","setItem","JSON","stringify"],"sources":["C:/Users/luish/OneDrive/Escritorio/Entregable/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useMemo, useState } from \"react\";\r\n\r\nexport const initialState = {theme: \"light\", data: []}\r\n\r\nexport const ContextGlobal = createContext(initialState);\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  const [theme, setTheme] = useState(initialState.theme)\r\n  const [data, setData] = useState(initialState.data)\r\n  const anotherData = useMemo(()=>{\r\n    const getDentists = async() => {\r\n      const dataFetched = await fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((response) => {\r\n        return response.json()\r\n      })\r\n      return(dataFetched)\r\n    }\r\n    localStorage.setItem('favoritesDentists', JSON.stringify(data))\r\n    return {getDentists, theme, data, setTheme, setData}\r\n  }, [theme, data])\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={anotherData}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,OAAxB,EAAiCC,QAAjC,QAAiD,OAAjD;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAACC,KAAK,EAAE,OAAR;EAAiBC,IAAI,EAAE;AAAvB,CAArB;AAEP,OAAO,MAAMC,aAAa,gBAAGN,aAAa,CAACG,YAAD,CAAnC;AAEP,OAAO,MAAMI,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EAEA,MAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBP,QAAQ,CAACC,YAAY,CAACC,KAAd,CAAlC;EACA,MAAM,CAACC,IAAD,EAAOK,OAAP,IAAkBR,QAAQ,CAACC,YAAY,CAACE,IAAd,CAAhC;EACA,MAAMM,WAAW,GAAGV,OAAO,CAAC,MAAI;IAC9B,MAAMW,WAAW,GAAG,YAAW;MAC7B,MAAMC,WAAW,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAL,CACzBC,IADyB,CACnBC,QAAD,IAAc;QAClB,OAAOA,QAAQ,CAACC,IAAT,EAAP;MACD,CAHyB,CAA1B;MAIA,OAAOJ,WAAP;IACD,CAND;;IAOAK,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0CC,IAAI,CAACC,SAAL,CAAehB,IAAf,CAA1C;IACA,OAAO;MAACO,WAAD;MAAcR,KAAd;MAAqBC,IAArB;MAA2BI,QAA3B;MAAqCC;IAArC,CAAP;EACD,CAV0B,EAUxB,CAACN,KAAD,EAAQC,IAAR,CAVwB,CAA3B;EAYA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAEM,WAA/B;IAAA,UACGH;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAtBM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}